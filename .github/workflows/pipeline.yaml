
name: Deploy Cloud Function

env:
  PROJECT_ID: united-axle-390115
  GAR_LOCATION: europe-west2 
  REPOSITORY: betterchess
  SERVICE: analyse-chess-game
  REGION: europe-west2
  IMAGE_ID: europe-west2-docker.pkg.dev/united-axle-390115/betterchess/analyse-chess-game:${{ github.sha }}
  

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
      - develop

jobs:
  Validate:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - id: Set-Up
      uses: actions/setup-python@v3
      with:
        python-version: "3.9"

    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        pip install -r requirements.txt

    - name: Flake8
      run: |
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics --ignore=E501,W503
        flake8 . --count --max-complexity=10 --max-line-length=127 --statistics

    - name: Run Pytest
      run: python -m pytest

  Deploy:
    needs: Validate
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest

    permissions:
      contents: read
      id-token: write


    steps:
    - uses: 'actions/checkout@v3'

    - name: Authenticate GCP
      id: auth
      uses: 'google-github-actions/auth@v1'
      with:
        credentials_json: '${{ secrets.GOOGLE_CREDENTIALS }}'
        # token_format: 'access_token'

    - name: Docker Auth
      id: docker-auth
      uses: 'docker/login-action@v1'
      with:
        registry: ${{ env.GAR_LOCATION }}-docker.pkg.dev
        username: _json_key
        password: ${{ secrets.GOOGLE_CREDENTIALS }}
    
    - name: Build and Push Container
      run: |-
        docker build -t "${{ env.IMAGE_ID }}" ./
        docker push "${{ env.IMAGE_ID }}"

    - name: Set Image Name In Metadata File
      run: |
        sed -i "s|IMAGE_NAME|${{ env.IMAGE_ID }}|g" metadata.yaml

    - name: Deploy to Cloud Run
      id: deploy
      uses: google-github-actions/deploy-cloudrun@v0
      with:
        service: ${{ env.SERVICE }}
        region: ${{ env.REGION }}
        image: ${{ env.IMAGE_ID }}
        allow-unauthenticated: true
        metadata: metadata.yaml